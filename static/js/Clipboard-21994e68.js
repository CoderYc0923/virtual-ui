var t=Object.defineProperty,e=(e,o,i)=>(((e,o,i)=>{o in e?t(e,o,{enumerable:!0,configurable:!0,writable:!0,value:i}):e[o]=i})(e,"symbol"!=typeof o?o+"":o,i),i);class o{constructor(t){e(this,"navigator",window.navigator),e(this,"onCopyCallback"),e(this,"disableCopy"),e(this,"clipboardInterceptor"),e(this,"defaultCopyCb",(()=>{console.log("监听了复制操作")})),e(this,"defaultInterceptor",(t=>t)),this.onCopyCallback=t.onCopyCallback?t.onCopyCallback:this.defaultCopyCb,this.clipboardInterceptor=t.clipboardInterceptor?t.clipboardInterceptor:this.defaultInterceptor,this.disableCopy=t.disableCopy,this.init()}init(){document.removeEventListener("copy",(()=>{}),!1),document.addEventListener("copy",(t=>{this.onCopyCallback(t),this.disableCopy?t.preventDefault?t.preventDefault():t.returnValue=!1:this.clipboardTextHandler()}),!1)}clipboardTextHandler(){let t=window.getSelection().toString();const e=this.clipboardInterceptor(t)??t;this.setClipboardText(e)}setClipboardText(t){this.navigator.clipboard.writeText(t)}remove(){document.removeEventListener("copy",(()=>{}),!1)}}export{o as V};
