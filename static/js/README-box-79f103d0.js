import{b as t,M as e}from"./index-a7ba88c7.js";import{d as s,g as d,h as o,q as a,y as n,C as r,b as l,s as c,l as i,j as g}from"./vue-90884f3d.js";const x=s({__name:"baseMessageBox",setup(s){const r=()=>{e("这是一个消息","标题",{callback:t=>{console.log("消息盒子回调测试",t)}})};return(e,s)=>(d(),o(t,{type:"text",onClick:r},{default:a((()=>[n("点击我打开Message Box")])),_:1}))}}),p=s({__name:"confirmMessageBox",setup(s){const r=()=>{e("你将删除这个文件，是否继续","Waring",{boxType:"confirm",type:"warning"}).then((()=>{console.log("删除完成")})).catch((()=>{console.log("删除取消")}))};return(e,s)=>(d(),o(t,{type:"text",onClick:r},{default:a((()=>[n("点击我打开Message Box")])),_:1}))}}),E=s({__name:"closeMessageBox",setup(s){const r=()=>{e("你将删除这个文件，是否继续","Waring",{boxType:"confirm",type:"warning",distinguishCancelAndClose:!0}).then((()=>{console.log("删除完成")})).catch((()=>{console.log("删除取消")}))};return(e,s)=>(d(),o(t,{type:"text",onClick:r},{default:a((()=>[n("点击我打开Message Box")])),_:1}))}}),h={class:"markdown-body"},B=i('<h1 id="messagebox-%E6%B6%88%E6%81%AF%E5%BC%B9%E6%A1%86" tabindex="-1">MessageBox 消息弹框</h1><p>模拟系统的消息提示框而实现的一套模态对话框组件，用于消息提示、确认消息和提交内容。</p><blockquote><p><strong>Tip</strong> 从设计上来说，MessageBox 的作用是美化系统自带的 <code>alert</code>、<code>confirm</code> 和 <code>prompt</code>，因此适合展示较为简单的内容。</p></blockquote><h2 id="%E6%B6%88%E6%81%AF%E6%8F%90%E7%A4%BA" tabindex="-1">消息提示</h2><p>当用户进行操作时会被触发，该对话框中断用户操作，直到用户确认知晓后才可关闭。</p><p>调用$alert方法即可打开消息提示， 它模拟了系统的 alert，无法通过按下 ESC 或点击框外关闭。 此例中接收了两个参数，message和title。 我们使用了callback参数来接受关闭后的回调。</p>',6),b=g("h2",{id:"%E7%A1%AE%E8%AE%A4%E6%B6%88%E6%81%AF",tabindex:"-1"},"确认消息",-1),u=g("p",null,"提示用户确认其已经触发的动作，并询问是否进行此操作时会用到此对话框。除了上面一个列子使用的callback回调之外，本身此函数会返回一个promise,也可以得知用户操作。",-1),m=g("h2",{id:"%E5%8C%BA%E5%88%86%E5%8F%96%E6%B6%88%E6%93%8D%E4%BD%9C%E4%B8%8E%E5%85%B3%E9%97%AD%E6%93%8D%E4%BD%9C",tabindex:"-1"},"区分取消操作与关闭操作",-1),M=g("p",null,[n("有些场景下，点击取消按钮与点击关闭按钮有着不同的含义。 所以我们可以开启遮罩点击关闭与ESC按钮关闭，以腾出位置给两个按钮用以实现不同的功能。 如果将 "),g("code",null,"distinguishCancelAndClose"),n(" 属性设置为 true,即可开启上述两种关闭模式。")],-1),f=i('<h2 id="%E6%8C%89%E9%9C%80%E5%BC%95%E5%85%A5" tabindex="-1">按需引入</h2><p>如果您需要按需引入 MessageBox</p><pre><code class="language-ts"> import { MessageBoxFn } from &#39;freeze-virtual-ui&#39;\n</code></pre><h2 id="messagebox-%E9%85%8D%E7%BD%AE%E9%A1%B9" tabindex="-1">MessageBox 配置项</h2><table><thead><tr><th>属性</th><th>说明</th><th>类型</th><th>可选值</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>MessageBox 标题</td><td>string</td><td>–</td><td>Title</td></tr><tr><td>message</td><td>MessageBox 消息正文内容</td><td>string</td><td>–</td><td>–</td></tr><tr><td>boxType</td><td>MessageBox 类型</td><td>string</td><td>alert/confirm</td><td>alert</td></tr><tr><td>type</td><td>MessageBox 图标类型</td><td>string</td><td>‘success’ / ‘info’ / ‘warning’ / ‘danger’</td><td>info</td></tr><tr><td>callback</td><td>MessageBox 回调函数</td><td>Function</td><td>–</td><td>–</td></tr><tr><td>showClose</td><td>MessageBox 是否显示右上角关闭按钮</td><td>boolean</td><td>–</td><td>true</td></tr><tr><td>distinguishCancelAndClose</td><td>MessageBox 是否开启遮罩层点击关闭以及ESC按钮关闭</td><td>boolean</td><td>–</td><td>false</td></tr></tbody></table>',5),C={__name:"README-box",setup:(t,{expose:e})=>(e({frontmatter:{}}),(t,e)=>{const s=r("show-code");return d(),l("div",h,[B,c(s,{showPath:"messagebox/components/baseMessageBox"},{default:a((()=>[c(x)])),_:1}),b,u,c(s,{showPath:"messagebox/components/confirmMessageBox"},{default:a((()=>[c(p)])),_:1}),m,M,c(s,{showPath:"messagebox/components/closeMessageBox"},{default:a((()=>[c(E)])),_:1}),f])})};export{C as default};
